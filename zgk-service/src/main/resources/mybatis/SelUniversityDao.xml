<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.gk.dao.selcourse.ISelUniversityDao">

    <!--加入收藏表,当isJoin=true的时候加入本段sql,左关联-->
    <sql id="MAJOR_JOIN_LEFT">
        LEFT JOIN zgk_user_collection_3in7 collection
        on
        collection.universityId = zz.universityId
        and collection.majorCode = zz.majorCode
        and zz.batch=collection.batch
        AND collection.userId = #{userId}
    </sql>
    <!--加入收藏表,当isJoin=true的时候加入本段sql,必然关联-->
    <sql id="MAJOR_JOIN_INNER">
        INNER JOIN zgk_user_collection_3in7 collection
        on
        collection.universityId = zz.universityId
        and collection.majorCode = zz.majorCode
        and zz.batch=collection.batch
        AND collection.userId = #{userId}
    </sql>

    <sql id="enrolling_plan_zj">

        from zgk2.zgk_zj_3in7 zz
        INNER join zgk2.zgk_university uu on uu.id=zz.universityId
    </sql>

    <select id="selectUniversityById" resultType="cn.thinkjoy.gk.pojo.SelUniversityPojo" parameterType="java.util.Map">
        select uu.id as universityId,uu.name as universityName,uu.photo_url as photoUrl,uu.property,uu.rank,uu.educationLevel,dd.name as educationLevelName
        from zgk_university uu
        LEFT JOIN zgk_data_dict dd on dd.type='EDULEVEL' AND dd.dictId=uu.educationLevel
        where uu.id=#{universityId}
    </select>

    <select id="selectEduLevelByUniversityId" parameterType="java.util.Map" resultType="cn.thinkjoy.gk.pojo.EduLevelNumberPojo">
        select eduLevel,count(eduLevel) as number,dd.name as eduLevelName
        <include refid="enrolling_plan_zj"/>
        LEFT JOIN zgk_data_dict dd on dd.type='EDULEVEL' AND dd.dictId=zz.eduLevel
        where zz.universityId=#{universityId}
        GROUP BY zz.eduLevel
    </select>

    <select id="selectMajorList" resultType="cn.thinkjoy.gk.pojo.MajorPojo" parameterType="java.util.Map">
        SELECT
        uu.id AS universityId,
        zz.majorCode AS majorCode,
        uu.provinceCode,
        zz.batch AS batch,
        zz.universityName AS universityName,
        zz.subMajor AS majorName,
        zz.batch,
        zz.planEnrolling AS planNumber,
        zz.selectSubject AS selectSubject
        <if test="isLeftJoin==true">
        <!--以时间作为评定标准,如果时间存在说明收藏,如果时间不存在说明没有收藏-->
        ,IF(collection.createDate,1,0)  as isFavorite,
            collection.id as cid
        </if>
        <if test="isLeftJoin==false">
            ,0 as isFavorite
        </if>
        <include refid="enrolling_plan_zj"/>
        <!--判断是否加入收藏表-->
        <if test="isLeftJoin==true">
            <include refid="MAJOR_JOIN_LEFT"/>
        </if>
        <if test="isInnerJoin==true">
            <include refid="MAJOR_JOIN_INNER"/>
        </if>
        WHERE uu.id=#{universityId}
        <if test="offset">
        limit ${offset},${rows}
        </if>
    </select>

    <select id="selectMajorListCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(uu.id)
        <include refid="enrolling_plan_zj"/>
        <!--判断是否加入收藏表-->
        <if test="isLeftJoin==true">
            <include refid="MAJOR_JOIN_LEFT"/>
        </if>
        <if test="isInnerJoin==true">
            <include refid="MAJOR_JOIN_INNER"/>
        </if>
        WHERE uu.id=#{universityId}
    </select>
</mapper>

