<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.gk.dao.IUniversityExDAO">

    <select id="getWSUniversityDetail" resultType="UniversityDetailDto">
        SELECT a.id ,a.name,a.subjection,a.type,b.lgPlanNumber planNum,b.lgEnrollNumber enrollNum,
        b.lgLowestScore lowestScore ,b.lgLowestRank lowestRanking,b.lgAverageScore averageScore,b.lgAverageRank averageScoresRanking,
        a.provinceName provinceName,
        (select c.name from gk_university_dict c where c.dictId = a.property and c.type = 'FEATURE' ) dictName
        FROM gk_university a
        left join gk_enroll_report b on a.id = b.universityId
        <where>
            1=1
            <if test="year!=null">
                and b.year = #{year}
            </if>
            <if test="id!=null">
                and a.id =#{id}
            </if>
            <if test="batch!=null">
                and b.batch = #{batch}
            </if>
            <if test="code!=null">
                and a.code = #{code}
            </if>
            <if test="areaId!=null">
                and b.areaId = #{areaId}
            </if>
        </where>
    </select>

    <select id="getLGUniversityDetail" resultType="UniversityDetailDto">
        SELECT a.id ,a.name,a.subjection,a.type,b.lgPlanNumber planNum,b.lgEnrollNumber enrollNum,
        b.lgLowestScore lowestScore ,b.lgLowestRank lowestRanking,b.lgAverageScore averageScore,b.lgAverageRank averageScoresRanking,
        a.provinceName provinceName,
        (select c.name from gk_university_dict c where c.dictId = a.property and c.type = 'FEATURE' ) dictName
        FROM gk_university a
        left join gk_enroll_report b on a.id = b.universityId
        <where>
            1=1
            <if test="year!=null">
                and b.year = #{year}
            </if>
            <if test="id!=null">
                and a.id =#{id}
            </if>
            <if test="batch!=null">
                and b.batch = #{batch}
            </if>
            <if test="code!=null">
                and a.code = #{code}
            </if>
            <if test="areaId!=null">
                and b.areaId = #{areaId}
            </if>
        </where>
    </select>


    <select id="getWSUniversityDetailByCodes" resultType="UniversityDetailDto">
        SELECT a.id ,a.name,a.subjection,a.type,b.lgPlanNumber planNum,b.lgEnrollNumber enrollNum,
        b.lgLowestScore lowestScore ,b.lgLowestRank lowestRanking,b.lgAverageScore averageScore,b.lgAverageRank averageScoresRanking,
        (select c.name from gk_university_dict c where c.dictId = a.property and c.type = 'FEATURE' ) dictName
        FROM gk_university a
        left join gk_enroll_report b on a.id = b.universityId
        <where>
            1=1
            <if test="year!=null">
                and b.year = #{year}
            </if>
            <if test="codes!=null">
                and a.code in
                <foreach collection="codes" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="batch!=null">
                and b.batch = #{batch}
            </if>
            <if test="areaId!=null">
                and b.areaId = #{areaId}
            </if>
        </where>
    </select>

    <select id="getLGUniversityDetailByCodes" resultType="UniversityDetailDto">
        SELECT a.id ,a.name,a.subjection,a.type,b.lgPlanNumber planNum,b.lgEnrollNumber enrollNum,
        b.lgLowestScore lowestScore ,b.lgLowestRank lowestRanking,b.lgAverageScore averageScore,b.lgAverageRank averageScoresRanking,
        (select c.name from gk_university_dict c where c.dictId = a.property and c.type = 'FEATURE' ) dictName
        FROM gk_university a
        left join gk_enroll_report b on a.id = b.universityId
        <where>
            1=1
            <if test="year!=null">
                and b.year = #{year}
            </if>
            <if test="codes!=null">
                and a.code in
                <foreach collection="codes" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="batch!=null">
                and b.batch = #{batch}
            </if>
            <if test="areaId!=null">
                and b.areaId = #{areaId}
            </if>
        </where>
    </select>

    <select id="getMajoredScoreLinePojoList" resultType="MajoredScoreLinePojo" parameterType="java.util.Map">
        SELECT
        ll.universityId,
        mm.id as majoredId,
        ll.majoredName,
        ll.year,
        ll.enrollBatch,
        ll.subject,
        ll.enrollNumber,
        ll.highestScore,
        ll.lowestScore,
        ll.averageScore
        FROM
        gk_majored mm
        LEFT JOIN
        gk_majored_score_line ll
        ON mm.name = ll.majoredName
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="universityId != null">
                AND ll.universityId = #{universityId}
            </if>
            <if test="year != null">
                AND ll.year = #{year}
            </if>
            <if test="subject != null">
                AND ll.subject = #{subject}
            </if>
            <if test="areaId != null">
                AND ll.areaId = #{areaId}
            </if>
        </trim>
        GROUP BY ll.majoredName
    </select>

    <select id="getMajoredScoreLineYears" resultType="String" parameterType="java.util.Map">
        select DISTINCT year
        from gk_majored_score_line
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="universityId != null">
                AND universityId = #{universityId}
            </if>
            <if test="areaId != null">
                AND areaId = #{areaId}
            </if>
        </trim>
        order by year DESC
        limit 3
    </select>

    <select id="getOpenMajoredPojoList" resultType="OpenMajoredPojo" parameterType="java.util.Map">
        select
        mm.id as majoredId ,
        rr.majorName as majoredName,
        <!-- pp.majorBatch as batch,专业信息补充内容表中只有本科专科，暂时不显示-->
        pp.subject as subject,
        <!-- majoredRank,-->
        rr.salaryRank as salaryRank,
        rr.employedRank as employmentRateRank,
        isEnrol as isEnrol
        from gk_majored mm
        left join  gk_majored_rank rr
        on mm.name=rr.majorName
        left join (
            select id,universityId,majoredName,batch,subject,year,areaId,1 as isEnrol
            from gk_enroll_plan
            where universityId = #{universityId} and areaId = #{areaId}
        ) pp
        on  rr.universityId = pp.universityId
        and rr.majorName=pp.majoredName
        and pp.year = #{year}
        where rr.universityId = #{universityId}
        GROUP BY rr.majorName,pp.subject
    </select>

    <select id="getRecentlyPlanInfosByYear" parameterType="java.util.Map" resultType="java.lang.Integer">
        select DISTINCT pp.year
        from gk_majored mm left join gk_enroll_plan pp on mm.id=pp.majoredId
        where
        pp.universityId=#{universityId}
        <if test="batch !=null and batch !=''">
            and pp.batch=#{batch}
        </if>
        <if test="areaId !=null and areaId !=''">
            and pp.areaId=#{areaId}
        </if>
        order by pp.year DESC
        limit 3
    </select>

    <select id="getRecentlyEnrollInfoByYear" parameterType="java.util.Map" resultType="java.lang.Integer">

        select DISTINCT year
        from gk_enroll_report where universityId=#{universityId}
        <if test="batch !=null and batch !=''">
            and batch=#{batch}
        </if>
        <if test="areaId !=null and batch !=''">
            and areaId=#{areaId}
        </if>
        order by year DESC
        limit 3
    </select>

    <insert id="saveMajoredScoreLine" parameterType="java.util.Map" >
        INSERT INTO gk_majored_score_line
        (
        universityId,
        universityName,
        majoredId,
        majoredName,
        provinceName,
        year,
        enrollBatch,
        subject,
        enrollNumber,
        highestScore,
        lowestScore,
        averageScore,
        areaId
        )
        VALUES
        (
        #{universityId},
        #{universityName},
        #{majoredId},
        #{majoredName},
        #{provinceName},
        #{year},
        #{enrollBatch},
        #{subject},
        #{enrollNumber},
        #{highestScore},
        #{lowestScore},
        #{averageScore},
        #{areaId}
        )
    </insert>

    <!-- 根据关键词查询学校基本信息 -->
    <select id="getUniversityInfoByKeywords" parameterType="java.util.Map" resultType="University">
        SELECT id,name from zgk_university where name ='电子科技大学' union
        select id,name from zgk_university where name like CONCAT('%',#{keywords},'%') LIMIT 5
    </select>

    <select id="queryPage" resultType="cn.thinkjoy.gk.dto.UniversityDTO">
        SELECT
        <if test="selector!=null">
            <trim prefixOverrides=",">
                <if test="selector.id!=null">
                    , university.id as id
                </if>
                <if test="selector.name!=null">
                    , university.name as name
                </if>
                <if test="selector.code!=null">
                    , university.code as code
                </if>
                <if test="selector.provinceCode!=null">
                    , university.provinceCode as provinceCode
                </if>
                <if test="selector.subjection!=null">
                    , university.subjection as subjection
                </if>
                <if test="selector.areaid!=null">
                    , university.areaid as areaid
                </if>
                <if test="selector.type!=null">
                    , university.type as type
                </if>
                <if test="selector.url!=null">
                    , university.url as url
                </if>
                <if test="selector.photoUrl!=null">
                    , university.photo_url as photoUrl
                </if>
                <if test="selector.property!=null">
                    , university.property as property
                </if>
                <if test="selector.rank!=null">
                    , university.rank as rank
                </if>
                <if test="selector.xcRank!=null">
                    , university.xc_rank as xcRank
                </if>
                <if test="selector.educationLevel!=null">
                    , university.educationLevel as educationLevel
                </if>
                <if test="selector.isDelete!=null">
                    , university.is_delete as isDelete
                </if>
                <if test="selector.address!=null">
                    ,detail.address as address
                </if>
                <if test="selector.contactPhone!=null">
                    ,detail.contactPhone as contactPhone
                </if>
                <if test="selector.universityIntro!=null">
                    ,detail.universityIntro as universityIntro
                </if>
                <if test="selector.entranceIntro!=null">
                    ,detail.entranceIntro as entranceIntro
                </if>
                <if test="selector.featureMajor!=null">
                    ,detail.featureMajor as featureMajor
                </if>
                <if test="selector.typeName!=null">
                    ,typedict.name as typeName
                </if>
                <if test="selector.levelName!=null">
                    ,leveldict.name as levelName
                </if>
                <if test="selector.province!=null">
                    ,province.name as province
                </if>
            </trim>
        </if>
        <if test="selector==null">
            university.id as id ,
            university.name as name ,
            university.code as code ,
            university.subjection as subjection ,
            university.areaid as areaid ,
            university.type as type ,
            university.url as url ,
            university.photo_url as photoUrl ,
            university.property as property ,
            university.rank as rank ,
            university.xc_rank as xcRank ,
            university.educationLevel as educationLevel,
            detail.address as address ,
            detail.contactPhone as contactPhone ,
            detail.universityIntro as universityIntro ,
            detail.entranceIntro as entranceIntro ,
            detail.featureMajor as featureMajor ,
            typedict.name as typeName,
            leveldict.name as levelName,
            province.name as province,
            university.lastModifier as lastModifier
        </if>
        FROM
        zgk_university university
        LEFT OUTER JOIN zgk_university_detail detail ON detail.id=university.id
        LEFT JOIN zgk_province province ON province.id = university.areaid
        LEFT JOIN zgk_data_dict typedict ON typedict.type='UNIVERSITY_TYPE' AND typedict.dictId=university.type
        LEFT JOIN zgk_data_dict leveldict ON leveldict.type='EDULEVEL' AND leveldict.dictId = university.educationLevel
        <where>
            1=1
            <if test="condition.name!=null">
                and university.name  ${condition.name.op} #{condition.name.data}
            </if>
            <if test="condition.whereSql != null">
                and id in (#{condition.whereSql})
            </if>
            <if test="condition.universityeducationLevel!=null">
                ${condition.groupOp}   ${condition.universityeducationLevel.field}  ${condition.universityeducationLevel.op}  #{condition.universityeducationLevel.data}
            </if>
            <if test="condition.universityprovinceName!=null">
                ${condition.groupOp}   university.areaid  ${condition.universityprovinceName.op}  #{condition.universityprovinceName.data}
            </if>
            <if test="condition.id!=null">
                ${condition.groupOp}   university.${condition.id.field}  ${condition.id.op}  #{condition.id.data}
            </if>
            <!--<if test="condition.ssss!=null">-->
            <!--${condition.groupOp}   university.name  like  '%吉林%'-->
            <!--</if>-->
            <if test="condition.code!=null">
                ${condition.groupOp}   university.${condition.code.field}  ${condition.code.op}  #{condition.code.data}
            </if>
            <if test="condition.provinceCode!=null">
                ${condition.groupOp}   university.${condition.provinceCode.field}  ${condition.provinceCode.op}  #{condition.provinceCode.data}
            </if>
            <if test="condition.subjection!=null">
                ${condition.groupOp}   university.${condition.subjection.field}  ${condition.subjection.op}  #{condition.subjection.data}
            </if>
            <if test="condition.areaid!=null">
                ${condition.groupOp}   university.${condition.areaid.field}  ${condition.areaid.op}  #{condition.areaid.data}
            </if>
            <if test="condition.type!=null">
                ${condition.groupOp}   university.${condition.type.field}  ${condition.type.op}  #{condition.type.data}
            </if>
            <if test="condition.url!=null">
                ${condition.groupOp}   university.${condition.url.field}  ${condition.url.op}  #{condition.url.data}
            </if>
            <if test="condition.photoUrl!=null">
                ${condition.groupOp}   university.${condition.photoUrl.field}  ${condition.photoUrl.op}  #{condition.photoUrl.data}
            </if>
            <if test="condition.property!=null">
                ${condition.groupOp}   university.${condition.property.field}  ${condition.property.op}  #{condition.property.data}
            </if>
            <if test="condition.rank!=null">
                ${condition.groupOp}   university.${condition.rank.field}  ${condition.rank.op}  #{condition.rank.data}
            </if>
            <if test="condition.educationLevel!=null">
                ${condition.groupOp}   university.${condition.educationLevel.field}  ${condition.educationLevel.op}  #{condition.educationLevel.data}
            </if>
            <if test="condition.createDate!=null">
                ${condition.groupOp}   university.${condition.createDate.field}  ${condition.createDate.op}  #{condition.createDate.data}
            </if>
            <if test="condition.creator!=null">
                ${condition.groupOp}   university.${condition.creator.field}  ${condition.creator.op}  #{condition.creator.data}
            </if>
            <if test="condition.lastModDate!=null">
                ${condition.groupOp}   university.${condition.lastModDate.field}  ${condition.lastModDate.op}  #{condition.lastModDate.data}
            </if>
            <if test="condition.lastModifier!=null">
                ${condition.groupOp}   university.${condition.lastModifier.field}  ${condition.lastModifier.op}  #{condition.lastModifier.data}
            </if>
            <if test="condition.isDelete!=null">
                ${condition.groupOp}   university.${condition.isDelete.field}  ${condition.isDelete.op}  #{condition.isDelete.data}
            </if>
            <!--<if test="condition.universityprovinceId!=null">-->
            <!--${condition.groupOp}   ${condition.universityprovinceId.field}  ${condition.universityprovinceId.op}  #{condition.universityprovinceId.data}-->
            <!--</if>-->
            <if test="condition.queryparam!=null">
                ${condition.groupOp}   (
                university.code like #{condition.queryparam.data}
                OR university.name like #{condition.queryparam.data}
                OR university.subjection like #{condition.queryparam.data}
                OR province.name like #{condition.queryparam.data}
                OR typedict.name like #{condition.queryparam.data}
                OR leveldict.name like #{condition.queryparam.data}
                )
            </if>

        </where>
        ORDER BY educationLevel,IF (ISNULL(rank),10000,rank) ${sortBy}
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(university.id)
        FROM
        zgk_university university
        LEFT OUTER JOIN zgk_university_detail detail ON detail.id=university.id
        LEFT JOIN zgk_province province ON province.id = university.areaid
        LEFT JOIN zgk_data_dict typedict ON typedict.type='UNIVERSITY_TYPE' AND typedict.dictId=university.type
        LEFT JOIN zgk_data_dict leveldict ON leveldict.type='EDULEVEL' AND leveldict.dictId = university.educationLevel
        <where>
            1=1
            <if test="universityeducationLevel!=null">
                ${groupOp}   ${universityeducationLevel.field}  ${universityeducationLevel.op}  #{universityeducationLevel.data}
            </if>
            <if test="universityprovinceName!=null">
                ${groupOp}  university.areaid  ${universityprovinceName.op}  #{universityprovinceName.data}
            </if>
            <if test="id!=null">
                ${groupOp}   university.${id.field}  ${id.op}  #{id.data}
            </if>
            <if test="name!=null">
                ${groupOp}   university.${name.field}  ${name.op}  #{name.data}
            </if>
            <if test="code!=null">
                ${groupOp}   university.${code.field}  ${code.op}  #{code.data}
            </if>
            <if test="provinceCode!=null">
                ${groupOp}   university.${provinceCode.field}  ${provinceCode.op}  #{provinceCode.data}
            </if>
            <if test="subjection!=null">
                ${groupOp}   university.${subjection.field}  ${subjection.op}  #{subjection.data}
            </if>
            <if test="areaid!=null">
                ${groupOp}   university.${areaid.field}  ${areaid.op}  #{areaid.data}
            </if>
            <if test="type!=null">
                ${groupOp}   university.${type.field}  ${type.op}  #{type.data}
            </if>
            <if test="url!=null">
                ${groupOp}   university.${url.field}  ${url.op}  #{url.data}
            </if>
            <if test="photoUrl!=null">
                ${groupOp}   university.${photoUrl.field}  ${photoUrl.op}  #{photoUrl.data}
            </if>
            <if test="property!=null">
                ${groupOp}   university.${property.field}  ${property.op}  #{property.data}
            </if>
            <if test="rank!=null">
                ${groupOp}   university.${rank.field}  ${rank.op}  #{rank.data}
            </if>
            <if test="educationLevel!=null">
                ${groupOp}   university.${educationLevel.field}  ${educationLevel.op}  #{educationLevel.data}
            </if>
            <if test="createDate!=null">
                ${groupOp}   university.${createDate.field}  ${createDate.op}  #{createDate.data}
            </if>
            <if test="creator!=null">
                ${groupOp}   university.${creator.field}  ${creator.op}  #{creator.data}
            </if>
            <if test="lastModDate!=null">
                ${groupOp}   university.${lastModDate.field}  ${lastModDate.op}  #{lastModDate.data}
            </if>
            <if test="lastModifier!=null">
                ${groupOp}   university.${lastModifier.field}  ${lastModifier.op}  #{lastModifier.data}
            </if>
            <if test="isDelete!=null">
                ${groupOp}   university.${isDelete.field}  ${isDelete.op}  #{isDelete.data}
            </if>
            <!--<if test="universityprovinceId!=null">-->
            <!--${groupOp}   ${universityprovinceId.field}  ${universityprovinceId.op}  #{universityprovinceId.data}-->
            <!--</if>-->
            <if test="queryparam!=null">
                ${groupOp}   (
                university.code like #{queryparam.data}
                OR university.name like #{queryparam.data}
                OR university.subjection like #{queryparam.data}
                OR province.name like #{queryparam.data}
                OR typedict.name like #{queryparam.data}
                OR leveldict.name like #{queryparam.data}
                )
            </if>

        </where>
    </select>

    <select id="getUniversityMajorEnrollingPlanList" resultType="cn.thinkjoy.gk.dto.UniversityMajorEnrollingPlanDTO" parameterType="java.util.Map">
        SELECT
        majorId as majoredId,
        majorName as majoredName,
        enrollType as enrollType,
        year,
        '' as batchName,
        (SELECT NAME FROM zgk_data_dict dd
        WHERE dd.type = 'UNIVERSITY_MAJOR_TYPE'
        AND dd.dictId = pp.majorType)
        as majorType,
        planEnrolling,
        lengthOfSchooling,
        schoolFee
        FROM
        zgk_university_major_enrolling_plan pp
        WHERE
        universityId = #{universityId}
        <if test="year!=null">
            and year = #{year}
        </if>
        <if test="majorType!=null">
            and majorType = #{majorType}
        </if>
        <if test="areaId!=null">
            and areaId = #{areaId}
        </if>
        <if test="offset != null">
            limit ${offset}, ${rows}
        </if>
    </select>
</mapper>
