<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.thinkjoy.gk.dao.IUniversityExDAO">

    <select id="getWSUniversityDetail" resultType="UniversityDetailDto">
        SELECT a.id ,a.name,a.subjection,a.type,b.lgPlanNumber planNum,b.lgEnrollNumber enrollNum,
        b.lgLowestScore lowestScore ,b.lgLowestRank lowestRanking,b.lgAverageScore averageScore,b.lgAverageRank averageScoresRanking,
        a.provinceName provinceName,
        (select c.name from gk_university_dict c where c.dictId = a.property and c.type = 'FEATURE' ) dictName
        FROM gk_university a
        left join gk_enroll_report b on a.id = b.universityId
        <where>
            1=1
            <if test="year!=null">
                and b.year = #{year}
            </if>
            <if test="id!=null">
                and a.id =#{id}
            </if>
            <if test="batch!=null">
                and b.batch = #{batch}
            </if>
            <if test="code!=null">
                and a.code = #{code}
            </if>
            <if test="areaId!=null">
                and b.areaId = #{areaId}
            </if>
        </where>
    </select>

    <select id="getLGUniversityDetail" resultType="UniversityDetailDto">
        SELECT a.id ,a.name,a.subjection,a.type,b.lgPlanNumber planNum,b.lgEnrollNumber enrollNum,
        b.lgLowestScore lowestScore ,b.lgLowestRank lowestRanking,b.lgAverageScore averageScore,b.lgAverageRank averageScoresRanking,
        a.provinceName provinceName,
        (select c.name from gk_university_dict c where c.dictId = a.property and c.type = 'FEATURE' ) dictName
        FROM gk_university a
        left join gk_enroll_report b on a.id = b.universityId
        <where>
            1=1
            <if test="year!=null">
                and b.year = #{year}
            </if>
            <if test="id!=null">
                and a.id =#{id}
            </if>
            <if test="batch!=null">
                and b.batch = #{batch}
            </if>
            <if test="code!=null">
                and a.code = #{code}
            </if>
            <if test="areaId!=null">
                and b.areaId = #{areaId}
            </if>
        </where>
    </select>


    <select id="getWSUniversityDetailByCodes" resultType="UniversityDetailDto">
        SELECT a.id ,a.name,a.subjection,a.type,b.lgPlanNumber planNum,b.lgEnrollNumber enrollNum,
        b.lgLowestScore lowestScore ,b.lgLowestRank lowestRanking,b.lgAverageScore averageScore,b.lgAverageRank averageScoresRanking,
        (select c.name from gk_university_dict c where c.dictId = a.property and c.type = 'FEATURE' ) dictName
        FROM gk_university a
        left join gk_enroll_report b on a.id = b.universityId
        <where>
            1=1
            <if test="year!=null">
                and b.year = #{year}
            </if>
            <if test="codes!=null">
                and a.code in
                <foreach collection="codes" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="batch!=null">
                and b.batch = #{batch}
            </if>
            <if test="areaId!=null">
                and b.areaId = #{areaId}
            </if>
        </where>
    </select>

    <select id="getLGUniversityDetailByCodes" resultType="UniversityDetailDto">
        SELECT a.id ,a.name,a.subjection,a.type,b.lgPlanNumber planNum,b.lgEnrollNumber enrollNum,
        b.lgLowestScore lowestScore ,b.lgLowestRank lowestRanking,b.lgAverageScore averageScore,b.lgAverageRank averageScoresRanking,
        (select c.name from gk_university_dict c where c.dictId = a.property and c.type = 'FEATURE' ) dictName
        FROM gk_university a
        left join gk_enroll_report b on a.id = b.universityId
        <where>
            1=1
            <if test="year!=null">
                and b.year = #{year}
            </if>
            <if test="codes!=null">
                and a.code in
                <foreach collection="codes" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="batch!=null">
                and b.batch = #{batch}
            </if>
            <if test="areaId!=null">
                and b.areaId = #{areaId}
            </if>
        </where>
    </select>

    <select id="getMajoredScoreLinePojoList" resultType="MajoredScoreLinePojo" parameterType="java.util.Map">
        SELECT
        universityId,
        majoredId,
        year,
        enrollBatch,
        subject,
        enrollNumber,
        highestScore,
        lowestScore,
        averageScore
        FROM gk_majored_score_line
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="universityId != null">
                AND universityId = #{universityId}
            </if>
            <if test="year != null">
                AND year = #{year}
            </if>
            <if test="subject != null">
                AND subject = #{subject}
            </if>
            <if test="areaId != null">
                AND areaId = #{areaId}
            </if>
        </trim>
    </select>

    <select id="getMajoredScoreLineYears" resultType="String" parameterType="java.util.Map">
        select DISTINCT year
        from gk_majored_score_line
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="universityId != null">
                AND universityId = #{universityId}
            </if>
            <if test="areaId != null">
                AND areaId = #{areaId}
            </if>
        </trim>
    </select>


</mapper>

